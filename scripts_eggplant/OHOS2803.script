(*OHOS-2803: Verify in "Day Log" tab "Driver" mode that a "Special Driving Event Cleared" with reduced location record is created when driver in on "Personal Conveyance" and logs out from the vehicle.
- Mobile has the latest build. 
- DriverID and Pwd for at least one driver. 
- Access to the "Binary Payload". 
- Personal Conveyance is checked as "Unlimited" in HOS Portal. 
- Driver is logged in the mobile. 
- Logs are updated. 
- Driver is on special condition "Personal Conveyance". 
- Driver is in "Home" screen.*)

log "***Script name OHOS2803***"
put "JOSH0001" into DriverId
Global UnitAddress

//log one drivers in
BeforeTest
LoginDriver DriverId, DriverId, "OF", True
ELDTestCase.SendMessageToUpdateLogs

//driver switches to Personal Conveyance and than to another status
Status_ChangeTestCase.ChangeDriverStatus "OFF", "PC", "1234"
Wait 1 minute

//Logout Driver
LogoutDriver "OF", DriverId
Wait 1 minute

//Log driver back in
LoginDriver DriverId, DriverId, "OF", True
ELDTestCase.SendMessageToUpdateLogs
Click "Home/HOS_ELD"

//Get the newest driver and inspector mode logs
GoTo.DayForward DayLog, 8
DayLogTestCase.findDriverRecord Translator(Other:"PC"), "Status","Bottom", "Asc"
Put DayLogTestCase.getDriverRecords(3,"","Desc") into DriverLogs

DayLogTestCase.findInspectorRecord Translator(Other:"Special Driving"), "EventEventCode", "Bottom","Asc"
Put DayLogTestCase.getInspectorRecords(2,"","Desc") into InspectorLogs

Repeat for the number of items in InspectorLogs
	If item repeatIndex() of InspectorLogs contains Translator(Other:"Special Driving Event Cleared 3-0")
		Put repeatIndex() into SpecialIndex
		Exit repeat
	End If
End Repeat

//Check driver logs
assert item 2 of item 1 of DriverLogs contains Translator(Other:"PC")
assert item 2 of item 2 of DriverLogs contains Translator(Other:"OFF")
assert item 2 of item 3 of DriverLogs contains Translator(Other:"OFF")


//Check inspector logs
If item 2 of item SpecialIndex of InspectorLogs contains Translator(Other:"Special Driving")
	LogSuccess "Special driving event found in Inspector Logs"
	If item 2 of item SpecialIndex of InspectorLogs contains "3-0" and item 1 of item SpecialIndex of InspectorLogs contains Translator(Other:"Driver") and item 8 of item SpecialIndex of InspectorLogs equals ""
		LogSuccess "Special driving event has the correct origin, event type/code, and no comments"
	Else
		LogError "Special driving event missing information"
	End If
Else
	LogError "Special driving event not found in inspector logs"
End If

If item 2 of item (SpecialIndex+1) of InspectorLogs contains Translator(Other:"ELD Logout")
	LogSuccess "ELD Logout Event happened after Special Driving Event Clear"
	If item 2 of item (SpecialIndex+1) of InspectorLogs contains "5-2" and item 1 of item (SpecialIndex+1) of InspectorLogs contains Translator(Other:"Driver") and item 8 of item (SpecialIndex+1) of InspectorLogs equals ""
		LogSuccess "ELD Logout Event has the correct origin, event type/code, and no comments"
	Else
		
		LogError "ELD Logout Event missing information"
	End If
Else
	LogError "ELD Logout Event not found in inspector logs"
End If


//Check DB
wait 1 min
put DBController.executeParametrizedQuery("select top 1 BINARY_PAYLOAD from RETURN_MSG where UNIFIED_ADDRESS = ? AND BINARY_PAYLOAD LIKE '8dfe6%' ORDER BY INSERT_TIME DESC", (UnitAddress)) into DBComment
put DBComment.BINARY_PAYLOAD into DBResult

//put into parser
BinaryParser_Selenium.goToParser
BinaryParser_Selenium.ParserReturnMessage DBResult
Put BinaryParser_Selenium.getRtnMsgKeyValue("Latitude") into Latitude
Put BinaryParser_Selenium.getRtnMsgKeyValue("Longitude") into Longitude

//check to see if the found message is a Special Driving event clear message
If ImageFound(15,Text:"ELD_Clear_Special_Driving_Event")
	LogSuccess "Special driving event return message found"
else
	If DBResult is empty then LogError "Special Driving event message not found"
End If

//check latitude and longitude for reduced precision
set ReducedPattern to <maybe a "-",1 or more digits,".",1 digit>

If Latitude matches ReducedPattern
	LogSuccess "Latitude's precision is reduced"
else
	LogError "Latitude's precision is not reduced"
End If

If Longitude matches ReducedPattern
	LogSuccess "Longitude's precision is reduced"
else
	LogError "Longitude's precision is not reduced"
End If
